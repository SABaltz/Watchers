{"version":3,"file":"index.js","sources":["../src/components/NavBar.tsx","../src/components/Application.tsx"],"sourcesContent":["import React from \"react\";\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport Menu from '@mui/material/Menu';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport Container from '@mui/material/Container';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport Tooltip from '@mui/material/Tooltip';\nimport MenuItem from '@mui/material/MenuItem';\nimport AdbIcon from '@mui/icons-material/Adb';\n\nconst pages = ['Products', 'Pricing', 'Blog'];\nconst settings = ['Profile', 'Account', 'Dashboard', 'Logout'];\n\nexport default function NavBar() {\n    const [anchorElNav, setAnchorElNav] = React.useState(null);\n    const [anchorElUser, setAnchorElUser] = React.useState(null);\n\n    const handleOpenNavMenu = (event) => {\n        setAnchorElNav(event.currentTarget);\n    };\n    const handleOpenUserMenu = (event) => {\n        setAnchorElUser(event.currentTarget);\n    };\n\n    const handleCloseNavMenu = () => {\n        setAnchorElNav(null);\n    };\n\n    const handleCloseUserMenu = () => {\n        setAnchorElUser(null);\n    };\n\n    return (\n        // <AppBar position=\"static\">\n        //     <Container maxWidth=\"xl\">\n        //         <Toolbar disableGutters>\n        //             <AdbIcon sx={{ display: { xs: 'none', md: 'flex' }, mr: 1 }} />\n        //             <Typography\n        //                 variant=\"h6\"\n        //                 noWrap\n        //                 component=\"a\"\n        //                 href=\"/\"\n        //                 sx={{\n        //                     mr: 2,\n        //                     display: { xs: 'none', md: 'flex' },\n        //                     fontFamily: 'monospace',\n        //                     fontWeight: 700,\n        //                     letterSpacing: '.3rem',\n        //                     color: 'inherit',\n        //                     textDecoration: 'none',\n        //                 }}\n        //             >\n        //                 Test\n        //             </Typography>\n        //\n        //             <Box sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}>\n        //                 <IconButton\n        //                     size=\"large\"\n        //                     aria-label=\"account of current user\"\n        //                     aria-controls=\"menu-appbar\"\n        //                     aria-haspopup=\"true\"\n        //                     onClick={handleOpenNavMenu}\n        //                     color=\"inherit\"\n        //                 >\n        //                     <MenuIcon />\n        //                 </IconButton>\n        //                 <Menu\n        //                     id=\"menu-appbar\"\n        //                     anchorEl={anchorElNav}\n        //                     anchorOrigin={{\n        //                         vertical: 'bottom',\n        //                         horizontal: 'left',\n        //                     }}\n        //                     keepMounted\n        //                     transformOrigin={{\n        //                         vertical: 'top',\n        //                         horizontal: 'left',\n        //                     }}\n        //                     open={Boolean(anchorElNav)}\n        //                     onClose={handleCloseNavMenu}\n        //                     sx={{\n        //                         display: { xs: 'block', md: 'none' },\n        //                     }}\n        //                 >\n        //                     {pages.map((page) => (\n        //                         <MenuItem key={page} onClick={handleCloseNavMenu}>\n        //                             <Typography textAlign=\"center\">{page}</Typography>\n        //                         </MenuItem>\n        //                     ))}\n        //                 </Menu>\n        //             </Box>\n        //             <AdbIcon sx={{ display: { xs: 'flex', md: 'none' }, mr: 1 }} />\n        //             <Typography\n        //                 variant=\"h5\"\n        //                 noWrap\n        //                 component=\"a\"\n        //                 href=\"\"\n        //                 sx={{\n        //                     mr: 2,\n        //                     display: { xs: 'flex', md: 'none' },\n        //                     flexGrow: 1,\n        //                     fontFamily: 'monospace',\n        //                     fontWeight: 700,\n        //                     letterSpacing: '.3rem',\n        //                     color: 'inherit',\n        //                     textDecoration: 'none',\n        //                 }}\n        //             >\n        //                 Test\n        //             </Typography>\n        //             <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' } }}>\n        //                 {pages.map((page) => (\n        //                     <Button\n        //                         key={page}\n        //                         onClick={handleCloseNavMenu}\n        //                         sx={{ my: 2, color: 'white', display: 'block' }}\n        //                     >\n        //                         {page}\n        //                     </Button>\n        //                 ))}\n        //             </Box>\n        //\n        //             <Box sx={{ flexGrow: 0 }}>\n        //                 <Tooltip title=\"Open settings\">\n        //                     <IconButton onClick={handleOpenUserMenu} sx={{ p: 0 }}>\n        //                         <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/2.jpg\" />\n        //                     </IconButton>\n        //                 </Tooltip>\n        //                 <Menu\n        //                     sx={{ mt: '45px' }}\n        //                     id=\"menu-appbar\"\n        //                     anchorEl={anchorElUser}\n        //                     anchorOrigin={{\n        //                         vertical: 'top',\n        //                         horizontal: 'right',\n        //                     }}\n        //                     keepMounted\n        //                     transformOrigin={{\n        //                         vertical: 'top',\n        //                         horizontal: 'right',\n        //                     }}\n        //                     open={Boolean(anchorElUser)}\n        //                     onClose={handleCloseUserMenu}\n        //                 >\n        //                     {settings.map((setting) => (\n        //                         <MenuItem key={setting} onClick={handleCloseUserMenu}>\n        //                             <Typography textAlign=\"center\">{setting}</Typography>\n        //                         </MenuItem>\n        //                     ))}\n        //                 </Menu>\n        //             </Box>\n        //         </Toolbar>\n        //     </Container>\n        // </AppBar>\n\n        <div>success?</div>\n    );\n}\n","import React from \"react\";\n// import {BrowserRouter, Route, Routes} from \"react-router-dom\";\nimport NavBar from \"./NavBar\";\n// import Footer from \"./components/Footer\";\n// import HomePage from \"./components/HomePage\";\n// import Report from \"./components/Report\";\n// import List from \"./components/List\";\nexport default function Application({projectName}) {\n    return (\n        <>\n            <NavBar />\n            {/*<BrowserRouter>*/}\n            {/*    <Routes>*/}\n            {/*        <Route exact path=\"/\" element={<HomePage/>}/>*/}\n            {/*        <Route path=\"/report\" element={<Report/>}/>*/}\n            {/*        <Route path=\"/list\" element={<List/>}/>*/}\n            {/*    </Routes>*/}\n            {/*</BrowserRouter>*/}\n            {/*<Footer/>*/}\n        </>\n    )\n}\n"],"names":[],"mappings":";;;;AAkBc,SAAU,MAAM,GAAA;AACpB,IAAA,IAAA,EAAgC,GAAA,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAA,CAAxC,EAAA,CAAA,CAAA,CAAA,CAAE,OAAuC;AACrD,IAAA,IAAA,EAAkC,GAAA,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAA,CAAzC,EAAA,CAAA,CAAA,CAAA,CAAE,OAAwC;IAiB7D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2HI,IAAA,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,IAAA,EAAA,UAAA,CAAmB,EACrB;AACN;;AC/JA;AACA;AACA;AACA;AACwB,SAAA,WAAW,CAAC,EAAa,EAAA;AAAZ,IAAW,EAAA,CAAA,YAAA;AAC5C,IAAA,QACI,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA;AACI,QAAA,KAAA,CAAA,aAAA,CAAC,MAAM,EAAA,IAAA,CAAG,CASX,EACN;AACL;;;;"}